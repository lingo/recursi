var fs     = require('fs');
var path   = require('path');
var mime   = require('mime');
var crypto = require('crypto');
var _      = require('underscore');

var hashPath = function(path) {
    var hash = crypto.createHash('sha1');
    hash.update(path);
    return hash.digest('hex');
};

var readDir = function(dir, callback, options) {
	var defaults = {
		showHidden: true
	};
	if (typeof callback === 'undefined') {
		callback = options.callback;
	}
	options = _.extend(defaults, options);
	dir = { path: dir, id: hashPath(dir) };
	fs.readdir(dir.path, function(error, files) {
		if (error) {
			console.error(error);
			if (typeof options.error === 'function') {
				options.error(error, dir, files, options);
			}
			return;
		}
		var out = [];
		var dirs = [];
		// console.log('options', options);
		for (var i = 0; i < files.length; i++) {
			if (!options.showHidden) {
				if (files[i].charAt(0) === '.') {
					continue;
				}
			}
			files[i] = mime.stat(path.join(dir.path, files[i]));
			if (files[i].type === 'folder') {
				dirs.push(files[i].path);
				if (typeof(options.dirCallback) === 'function') {
					options.dirCallback(files[i]);
				}
				continue;
			}
			out.push(files[i]);
		}
		files = null;
		if (typeof callback !== 'undefined') {
			// console.log('callback', dir, out, options);
			callback(dir, out, options);
		}
		for(i=0; i < dirs.length; i++) {
			readDir(dirs[i], callback, options);
		}
	});
};

exports.readDir = readDir;
